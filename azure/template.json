{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "type": "string"
    },
    "resourceEnvironmentName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "loggingRedisConnectionString": {
      "type": "securestring"
    },
    "configurationStorageConnectionString": {
      "type": "securestring",
      "defaultValue": ""
    },
    "sharedStorageAccountConnectionString": {
      "type": "securestring"
    },
    "slackWebhookUri": {
      "type": "securestring"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "consumptionPlanName": "[concat(variables('resourceNamePrefix'),'-asp')]",
    "functionAppName": "[concat(variables('resourceNamePrefix'),'-fa')]",
    "actionGroupName": "[concat(variables('resourceNamePrefix'),'-algr')]",
    "actionGroupShortName": "DAS Alerts",
    "actionGroupWebhookReceiverName": "SlackWebhook",
    "webhookServiceUri":"[concat('https://', variables('functionAppName'),'.azurewebsites.net/api/common-alerts?code=')]",
    "commonAlertFunctionName": "CommonAlertSchemaWebhook"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "consumption-plan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'consumption-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "consumptionPlanName": {
            "value": "[variables('consumptionPlanName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "function-app-insights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('functionAppName')]"
          },
          "attachedService": {
            "value": "[variables('functionAppName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "function-app",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'function-app.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          },
          "appServicePlanName": {
            "value": "[variables('consumptionPlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "functionAppAppSettings": {
            "value": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[parameters('sharedStorageAccountConnectionString')]"
              },
              {
                "name": "AzureWebJobsDashboard",
                "value": "[parameters('sharedStorageAccountConnectionString')]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference('function-app-insights').outputs.InstrumentationKey.value]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~2"
              },
              {
                "name": "EnvironmentName",
                "value": "[toUpper(parameters('environmentName'))]"
              },
              {
                "name": "LoggingRedisConnectionString",
                "value": "[parameters('loggingRedisConnectionString')]"
              },
              {
                "name": "ConfigurationStorageConnectionString",
                "value": "[parameters('configurationStorageConnectionString')]"
              },
              {
                "name": "AppName",
                "value": "das-plmtr-jobs"
              },
              {
                "name": "SLACK_USERNAME",
                "value": "AzureAlerts"
              },
              {
                "name": "SLACK_DEFAULT_CHANNEL",
                "value": "das-alerts"
              },
              {
                "name": "SLACK_ICON_EMOJI",
                "value": ":mega:"
              },
              {
                "name": "SLACK_WEBHOOK_URI",
                "value": "[parameters('slackWebhookUri')]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "powershell"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "function-app-insights",
        "consumption-plan"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "action-group",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'action-group.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "actionGroupName": {
            "value": "[variables('actionGroupName')]"
          },
          "actionGroupShortName": {
            "value": "[variables('actionGroupShortName')]"
          },
          "webhookReceiverName": {
            "value": "[variables('actionGroupWebhookReceiverName')]"
          },
          "webhookServiceUri": {
            "value": "[concat(variables('webhookServiceUri'),listsecrets(resourceId('Microsoft.Web/sites/functions', variables('functionAppName'), variables('commonAlertFunctionName')),'2015-08-01').key)]"
          }
        }
      },
      "dependsOn":[
        "function-app"
      ]
    }
  ],
  "outputs": {
    "FunctionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    }
  }
}
